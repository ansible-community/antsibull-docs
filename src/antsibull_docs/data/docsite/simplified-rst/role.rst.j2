{#
  Copyright (c) Ansible Project
  GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
  SPDX-License-Identifier: GPL-3.0-or-later
#}

.. Created with antsibull-docs @{ antsibull_docs_version }@

{% from 'macros/attributes.rst.j2' import in_rst as attributes_rst with context -%}
{% from 'macros/collection_links.rst.j2' import add as add_collection_links with context -%}
{% from 'macros/parameters.rst.j2' import in_html as parameters_html with context -%}
{% from 'macros/version_added.rst.j2' import version_added_rst -%}

{% if entry_points.main and entry_points.main.short_description -%}
{%   set title = plugin_name ~ ' ' ~ plugin_type ~ ' -- ' ~ entry_points.main.short_description | rst_ify(role_entrypoint='main') -%}
{% else -%}
{%   set title = plugin_name ~ ' ' ~ plugin_type -%}
{% endif -%}

@{ title }@
@{ '+' * title|column_width }@

{% if collection == 'ansible.builtin' -%}
This role is part of ``ansible-core`` and included in all Ansible
installations.
{% else %}
This role is part of the `@{collection}@ collection <@{ collection | collection_url }@>`_{% if collection_version %} (version @{ collection_version }@){% endif %}.

{%   if for_official_docsite %}
You might already have this collection installed if you are using the ``ansible`` package.
{%   endif %}
It is not included in ``ansible-core``.
To check whether it is installed, run :code:`ansible-galaxy collection list`.

To install it use: @{ collection | collection_install | rst_code }@.

To use it in a playbook, specify: :code:`@{plugin_name}@`.
{% endif %}

.. contents::
   :local:
   :depth: 2

{% for entry_point, ep_doc in entry_points.items() | sort %}

{%   if ep_doc['short_description'] -%}
{%     set title = 'Entry point ``' + entry_point + '`` -- ' + ep_doc['short_description'] | rst_ify(role_entrypoint=entry_point) -%}
{%   else -%}
{%     set title = 'Entry point ``' + entry_point + '``' -%}
{%   endif -%}

@{ title }@
@{ '-' * title|column_width }@

{%   if ep_doc['version_added'] is still_relevant(collection=collection) -%}
New in @{ version_added_rst(ep_doc['version_added'], collection) }@
{%   endif %}

{%   if ep_doc['deprecated'] -%}
DEPRECATED
^^^^^^^^^^
{%     if ep_doc['deprecated']['removed_at_date'] %}
:Removed in: major release after @{ ep_doc['deprecated']['removed_at_date'] | rst_ify(role_entrypoint=entry_point) }@
{%     elif ep_doc['deprecated']['removed_in'] %}
:Removed in: version @{ ep_doc['deprecated']['removed_in'] | rst_ify(role_entrypoint=entry_point) }@
{%     else %}
:Removed in: a future release
{%     endif %}
:Why: @{ ep_doc['deprecated']['why'] | rst_ify(role_entrypoint=entry_point) | indent(6) }@
:Alternative: @{ ep_doc['deprecated']['alternative'] | rst_ify(role_entrypoint=entry_point) | indent(14) }@
{%   endif %}

Synopsis
^^^^^^^^

{%   for desc in ep_doc['description'] -%}
- @{ desc | rst_ify(role_entrypoint=entry_point) | indent(width=2) }@
{%   endfor %}

{%   if ep_doc['requirements'] -%}
Requirements
^^^^^^^^^^^^
The below requirements are needed on the remote host and/or the local controller node.

{%     for req in ep_doc['requirements'] %}
- @{ req | rst_ify(role_entrypoint=entry_point) | indent(width=2) }@
{%     endfor %}

{%   endif %}

{%   if ep_doc['options'] -%}

Parameters
^^^^^^^^^^

@{     parameters_html(ep_doc['options'] | dictsort, suboption_key='options', parameter_html_prefix=entry_point ~ '--', parameter_rst_prefix=entry_point ~ '__', role_entrypoint=entry_point) }@
{%   endif %}

{%   if ep_doc['attributes'] %}

Attributes
----------

@{     attributes_rst(ep_doc['attributes'], role_entrypoint=entry_point) }@
{%   endif %}

{%   if ep_doc['notes'] -%}
Notes
^^^^^

{%     for note in ep_doc['notes'] %}
- @{ note | rst_ify(role_entrypoint=entry_point) | indent(width=2) }@
{%     endfor %}
{%   endif %}

{%   if ep_doc['seealso'] -%}
See Also
^^^^^^^^

{%     for item in ep_doc['seealso'] %}
{%       if item.module is defined and item.description %}
* @{ reference_plugin_rst(item['module'], 'module') }@

  @{ item['description'] | rst_ify(role_entrypoint=entry_point) | indent(2) }@
{%       elif item.module is defined %}
* @{ reference_plugin_rst(item['module'], 'module') }@

  The official documentation on the **@{ item['module'] }@** module.
{%       elif item.plugin is defined and item.plugin_type is defined and item.description %}
* @{ reference_plugin_rst(item['plugin'], item['plugin_type']) }@ @{ item['plugin_type'] }@ plugin

  @{ item['description'] | rst_ify(role_entrypoint=entry_point) | indent(2) }@
{%       elif item.plugin is defined and item.plugin_type is defined %}
* @{ reference_plugin_rst(item['plugin'], item['plugin_type']) }@ @{ item['plugin_type'] }@ plugin

  The official documentation on the **@{ item['plugin'] }@** @{ item['plugin_type'] }@ plugin.
{%       elif item.name is defined and item.link is defined and item.description %}
* `@{ item['name'] }@ <@{ item['link'] }@>`_

   @{ item['description'] | rst_ify(role_entrypoint=entry_point) | indent(2) }@
{%       elif item.ref is defined and item.description %}
* :ref:`@{ item['ref'] }@`

  @{ item['description'] | rst_ify(role_entrypoint=entry_point) | indent(2) }@
{%       endif %}
{%     endfor %}
{%   endif %}

{%   if ep_doc['author'] -%}
Authors
^^^^^^^

{%     for author_name in ep_doc['author'] %}
- @{ author_name | massage_author_name }@
{%     endfor %}

{%   endif %}

{% endfor %}

.. Extra links

{% if collection_links %}
Collection links
~~~~~~~~~~~~~~~~

@{   add_collection_links(collection_links) -}@
{% endif %}

{% if nonfatal_errors %}
There were some errors parsing the documentation for this role.  Please file a bug with the `@{ collection }@ collection <@{ collection_issue_tracker or (collection | collection_url) }@>`_.

The errors were:

{% for error in nonfatal_errors %}
* ::

@{ error | indent(width=8, first=True) }@

{% endfor %}
{% endif %}
