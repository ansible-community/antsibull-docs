{#
  Copyright (c) Ansible Project
  GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
  SPDX-License-Identifier: GPL-3.0-or-later
#}

.. Created with antsibull-docs @{ antsibull_docs_version }@

{% from 'macros/collection_links.rst.j2' import add as add_collection_links with context -%}

{% macro list_plugins(plugin_type) %}
{%   for name, desc in plugin_maps[plugin_type].items() | sort %}
* `@{ name }@ @{ plugin_type }@ <@{ get_plugin_filename(collection_name ~ '.' ~ name, plugin_type) }@>`_ -- @{ desc | rst_ify(plugin_fqcn=collection_name ~ '.' ~ name, plugin_type=plugin_type) | indent(width=2) }@
{%   endfor %}
{% endmacro %}

@{collection_name.title()}@
@{ '=' * (collection_name | column_width) }@

{% if collection_version %}
Collection version @{ collection_version }@
{% endif %}

.. contents::
   :local:
   :depth: 1

{% if collection_description or collection_authors or collection_links or requires_ansible %}
Description
-----------

{%   if collection_description %}
@{ link_data.description | rst_ify }@
{%   endif %}

{%   if collection_authors %}
**Author@{ 's' if (collection_authors | length) > 1 else '' }@:**

{%     for author in collection_authors %}
* @{ author | indent(2) }@
{%     endfor %}
{%   endif %}

{%   if requires_ansible %}
**Supported ansible-core versions:**

{%     for part in requires_ansible %}
* @{     part | rst_escape }@
{%     endfor %}
{%   endif %}

{%   if collection_links %}
Collection links
~~~~~~~~~~~~~~~~

@{     add_collection_links(collection_links) -}@
{%   endif %}
{% endif %}

{% if not collection_communication.empty %}
Communication
-------------

{%   for matrix_room in collection_communication.matrix_rooms %}
- Matrix room :literal:`@{ matrix_room.room | rst_escape(escape_ending_whitespace=true) }@`: `@{ matrix_room.topic | rst_escape }@ <https://matrix.to/#/@{ matrix_room.room | rst_escape }@>`__.
{%   endfor %}
{%   for irc_channel in collection_communication.irc_channels %}
- IRC channel :literal:`@{ irc_channel.channel | rst_escape(escape_ending_whitespace=true) }@` (@{ irc_channel.network | rst_escape }@ network):
{%     if irc_channel.network == 'Libera' %}
  `@{ irc_channel.topic }@ <https://web.libera.chat/?channel=@{ irc_channel.channel | rst_escape }@>`__.
{%     else %}
  @{ irc_channel.topic | rst_escape }@.
{%     endif %}
{%   endfor %}
{%   for mailing_list in collection_communication.mailing_lists %}
- Mailing list: `@{ mailing_list.topic | rst_escape }@ <@{ mailing_list.url | rst_escape }@>`__.
{%     if mailing_list.subscribe %}
  (`Subscribe <mailto:@{ mailing_list.subscribe | rst_escape }@>`__)
{%     endif %}
{%   endfor %}
{% endif %}

{% for section in extra_docs_sections %}
@{section.title}@
@{ '-' * (section.title | column_width) }@

{%   if section.toctree %}
{%     for toctree_entry in section.toctree %}
{%       if toctree_entry.title %}
* `@{ toctree_entry.title | rst_escape }@ <@{ toctree_entry.ref }@.rst>`_
{%       else %}
* `<@{ toctree_entry.ref }@.rst>`_
{%       endif %}
{%     endfor %}
{%   endif %}

{% endfor %}

Plugin Index
------------

{% if plugin_maps | reject('eq', 'role') | list %}
These are the plugins in the @{collection_name}@ collection:
{% else %}
There are no plugins in the @{collection_name}@ collection with automatically generated documentation.
{% endif %}

{% for category in plugin_maps | reject('eq', 'role') | sort | move_first('module') %}

{%   if category == 'module' %}
Modules
~~~~~~~
{%   else %}
@{ category | capitalize }@ Plugins
@{ '~' * ((category | column_width) + 8) }@
{%   endif %}

@{   list_plugins(category) }@
{% endfor %}

{% if 'role' in plugin_maps %}
Role Index
----------

These are the roles in the @{collection_name}@ collection:

@{   list_plugins('role') }@
{% endif %}
