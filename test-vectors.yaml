---
# Simplified BSD License (see LICENSES/BSD-2-Clause.txt or https://opensource.org/licenses/BSD-2-Clause)
# SPDX-FileCopyrightText: Ansible Project
# SPDX-License-Identifier: BSD-2-Clause

test_vectors:
  empty:
    source: []
    html: ''
    html_plain: ''
    rst: ''
    md: ''
  empty_content:
    source: ['']
    html: <p></p>
    html_plain: <p></p>
    md: ' '
    rst: '\ '
  simple:
    source: |-
      This is a C(test) I(module) B(markup).
    html: |-
      <p>This is a <code class='docutils literal notranslate'>test</code> <em>module</em> <b>markup</b>.</p>
    html_plain: |-
      <p>This is a <code>test</code> <em>module</em> <b>markup</b>.</p>
    md: |-
      This is a <code>test</code> <em>module</em> <b>markup</b>.
    rst: |-
      This is a \ :literal:`test`\  \ :emphasis:`module`\  \ :strong:`markup`\ .
  module:
    source: |-
      The M(a.b.c) module.
    html: |-
      <p>The <a href='https://docs.ansible.com/ansible/devel/collections/a/b/c_module.html' class='module'>a.b.c</a> module.</p>
    html_opts:
      pluginLink.js: |-
        (plugin_data) => `https://docs.ansible.com/ansible/devel/collections/${plugin_data.fqcn.replace(/\./g, '/')}_${plugin_data.type}.html`
      pluginLink.py: |-
        lambda plugin_data: f"https://docs.ansible.com/ansible/devel/collections/{plugin_data.fqcn.replace('.', '/')}_{plugin_data.type}.html"
    html_plain: |-
      <p>The <a href='https://docs.ansible.com/ansible/devel/collections/a/b/c_module.html'>a.b.c</a> module.</p>
    md: |-
      The [a.b.c](https\://docs.ansible.com/ansible/devel/collections/a/b/c\_module.html) module.
    md_opts:
      pluginLink.js: |-
        (plugin_data) => `https://docs.ansible.com/ansible/devel/collections/${plugin_data.fqcn.replace(/\./g, '/')}_${plugin_data.type}.html`
      pluginLink.py: |-
        lambda plugin_data: f"https://docs.ansible.com/ansible/devel/collections/{plugin_data.fqcn.replace('.', '/')}_{plugin_data.type}.html"
    rst: |-
      The \ :ref:`a.b.c <ansible_collections.a.b.c_module>`\  module.
  module_no_link:
    source: |-
      The M(a.b.c) module.
    html: |-
      <p>The <span class='module'>a.b.c</span> module.</p>
    html_plain: |-
      <p>The <span>a.b.c</span> module.</p>
    md: |-
      The a.b.c module.
    rst: |-
      The \ :ref:`a.b.c <ansible_collections.a.b.c_module>`\  module.
  plugin:
    source: |-
      The P(a.b.c#lookup) lookup plugin.
    html: |-
      <p>The <a href='https://docs.ansible.com/ansible/devel/collections/a/b/c_lookup.html' class='module'>a.b.c</a> lookup plugin.</p>
    html_opts:
      pluginLink.js: |-
        (plugin_data) => `https://docs.ansible.com/ansible/devel/collections/${plugin_data.fqcn.replace(/\./g, '/')}_${plugin_data.type}.html`
      pluginLink.py: |-
        lambda plugin_data: f"https://docs.ansible.com/ansible/devel/collections/{plugin_data.fqcn.replace('.', '/')}_{plugin_data.type}.html"
    html_plain: |-
      <p>The <a href='https://docs.ansible.com/ansible/devel/collections/a/b/c_lookup.html'>a.b.c</a> lookup plugin.</p>
    md: |-
      The [a.b.c](https\://docs.ansible.com/ansible/devel/collections/a/b/c\_lookup.html) lookup plugin.
    md_opts:
      pluginLink.js: |-
        (plugin_data) => `https://docs.ansible.com/ansible/devel/collections/${plugin_data.fqcn.replace(/\./g, '/')}_${plugin_data.type}.html`
      pluginLink.py: |-
        lambda plugin_data: f"https://docs.ansible.com/ansible/devel/collections/{plugin_data.fqcn.replace('.', '/')}_{plugin_data.type}.html"
    rst: |-
      The \ :ref:`a.b.c <ansible_collections.a.b.c_lookup>`\  lookup plugin.
  plugin_no_link:
    source: |-
      The P(a.b.c#lookup) lookup plugin.
    html: |-
      <p>The <span class='module'>a.b.c</span> lookup plugin.</p>
    html_plain: |-
      <p>The <span>a.b.c</span> lookup plugin.</p>
    md: |-
      The a.b.c lookup plugin.
    rst: |-
      The \ :ref:`a.b.c <ansible_collections.a.b.c_lookup>`\  lookup plugin.
  link_and_url:
    source: |-
      An URL U(https://example.com) and L(a link, https://example.org).
    html: |-
      <p>An URL <a href='https://example.com'>https://example.com</a> and <a href='https://example.org'>a link</a>.</p>
    html_plain: |-
      <p>An URL <a href='https://example.com'>https://example.com</a> and <a href='https://example.org'>a link</a>.</p>
    md: |-
      An URL [https\://example.com](https\://example.com) and [a link](https\://example.org).
    rst: |-
      An URL \ https://example.com\  and \ `a link <https://example.org>`__\ .
  rst_ref:
    source: |-
      A R(RST reference, ansible_collections.community.general.ufw_module).
    html: |-
      <p>A <span class='module'>RST reference</span>.</p>
    html_plain: |-
      <p>A <span>RST reference</span>.</p>
    md: |-
      A RST reference.
    rst: |-
      A \ :ref:`RST reference <ansible_collections.community.general.ufw_module>`\ .
  horizontal_line:
    source: |-
      foo HORIZONTALLINE bar
    html: |-
      <p>foo <hr/> bar</p>
    html_plain: |-
      <p>foo <hr> bar</p>
    md: |-
      foo <hr> bar
    rst: |-
      foo 

      .. raw:: html

        <hr>

       bar
  semantic_markup:
    source: |-
      foo E(FOOBAR) bar P(foo.bar.baz#bam) has value V( foo\),bar\\bam ).
    html: |-
      <p>foo <code class="xref std std-envvar literal notranslate">FOOBAR</code> bar <span class='module'>foo.bar.baz</span> has value <code class="ansible-value literal notranslate"> foo),bar\bam </code>.</p>
    html_plain: |-
      <p>foo <code>FOOBAR</code> bar <span>foo.bar.baz</span> has value <code> foo),bar\bam </code>.</p>
    md: |-
      foo <code>FOOBAR</code> bar foo.bar.baz has value <code> foo\)\,bar\\bam </code>.
    rst: |-
      foo \ :envvar:`FOOBAR`\  bar \ :ref:`foo.bar.baz <ansible_collections.foo.bar.baz_bam>`\  has value \ :ansval:`\  foo),bar\\bam \ `\ .
  option_name_no_current_plugin:
    source:
      - |-
        O(foo) O(bar.baz[123].bam[len(x\) - 1])
      - |-
        O(foo=) O(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(foo=bar) O(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(bam.baz.foo#lookup:foo) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(bam.baz.foo#lookup:foo=) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(bam.baz.foo#lookup:foo=bar) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(ignore:foo) O(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(ignore:foo=) O(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(ignore:foo=bar) O(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_plain: |-
      <p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    rst: |-
      \ :ansopt:`foo`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo=`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo=bar`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=bar`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`foo`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo=`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo=bar`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=bar`\ 
  option_name_current_plugin:
    source:
      - |-
        O(foo) O(bar.baz[123].bam[len(x\) - 1])
      - |-
        O(foo=) O(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(foo=bar) O(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(bam.baz.foo#lookup:foo) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(bam.baz.foo#lookup:foo=) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(bam.baz.foo#lookup:foo=bar) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(ignore:foo) O(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(ignore:foo=) O(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(ignore:foo=bar) O(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_plain: |-
      <p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    rst: |-
      \ :ansopt:`foo.bar.baz.bam#boo:foo`\  \ :ansopt:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo.bar.baz.bam#boo:foo=`\  \ :ansopt:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo.bar.baz.bam#boo:foo=bar`\  \ :ansopt:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=bar`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`foo`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo=`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo=bar`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=bar`\ 
    parse_opts:
      current_plugin:
        fqcn: foo.bar.baz.bam
        type: boo
  option_name_no_current_plugin_w_links:
    source:
      - |-
        O(foo) O(bar.baz[123].bam[len(x\) - 1])
      - |-
        O(foo=) O(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(foo=bar) O(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(bam.baz.foo#lookup:foo) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(bam.baz.foo#lookup:foo=) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(bam.baz.foo#lookup:foo=bar) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(ignore:foo) O(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(ignore:foo=) O(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(ignore:foo=bar) O(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-option literal notranslate"><strong><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo"><span class="std std-ref"><span class="pre">foo</span></span></a></strong></code> <code class="ansible-option literal notranslate"><strong><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]</span></span></a></strong></code></p><p><code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo"><span class="std std-ref"><span class="pre">foo=</span></span></a></code> <code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=</span></span></a></code></p><p><code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo"><span class="std std-ref"><span class="pre">foo=bar</span></span></a></code> <code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=bar</span></span></a></code></p><p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    html_plain: |-
      <p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code><strong><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo">foo</a></strong></code> <code><strong><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]</a></strong></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo">foo=</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo">foo=bar</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=bar</a></code></p><p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code><strong><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-foo">foo</a></strong></code> <code><strong><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]</a></strong></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-foo">foo\=</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-foo">foo\=bar</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</a></code>

      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    md_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    rst: |-
      \ :ansopt:`foo`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo=`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo=bar`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=bar`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`foo`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo=`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo=bar`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=bar`\ 
  option_name_current_plugin_w_links:
    source:
      - |-
        O(foo) O(bar.baz[123].bam[len(x\) - 1])
      - |-
        O(foo=) O(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(foo=bar) O(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(bam.baz.foo#lookup:foo) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(bam.baz.foo#lookup:foo=) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(bam.baz.foo#lookup:foo=bar) O(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        O(ignore:foo) O(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        O(ignore:foo=) O(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        O(ignore:foo=bar) O(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-option literal notranslate"><strong><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-foo"><span class="std std-ref"><span class="pre">foo</span></span></a></strong></code> <code class="ansible-option literal notranslate"><strong><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]</span></span></a></strong></code></p><p><code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-foo"><span class="std std-ref"><span class="pre">foo=</span></span></a></code> <code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=</span></span></a></code></p><p><code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-foo"><span class="std std-ref"><span class="pre">foo=bar</span></span></a></code> <code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=bar</span></span></a></code></p><p><code class="ansible-option literal notranslate"><strong><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo"><span class="std std-ref"><span class="pre">foo</span></span></a></strong></code> <code class="ansible-option literal notranslate"><strong><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]</span></span></a></strong></code></p><p><code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo"><span class="std std-ref"><span class="pre">foo=</span></span></a></code> <code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=</span></span></a></code></p><p><code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo"><span class="std std-ref"><span class="pre">foo=bar</span></span></a></code> <code class="ansible-option-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=bar</span></span></a></code></p><p><code class="ansible-option literal notranslate"><strong>foo</strong></code> <code class="ansible-option literal notranslate"><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code class="ansible-option-value literal notranslate">foo=</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-option-value literal notranslate">foo=bar</code> <code class="ansible-option-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    html_plain: |-
      <p><code><strong><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-foo">foo</a></strong></code> <code><strong><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]</a></strong></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-foo">foo=</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-foo">foo=bar</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=bar</a></code></p><p><code><strong><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo">foo</a></strong></code> <code><strong><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]</a></strong></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo">foo=</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-foo">foo=bar</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#option-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=bar</a></code></p><p><code><strong>foo</strong></code> <code><strong>bar.baz[123].bam[len(x) - 1]</strong></code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code><strong><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#option\-foo">foo</a></strong></code> <code><strong><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]</a></strong></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#option\-foo">foo\=</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#option\-foo">foo\=bar</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</a></code>

      <code><strong><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-foo">foo</a></strong></code> <code><strong><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]</a></strong></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-foo">foo\=</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-foo">foo\=bar</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#option\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</a></code>

      <code><strong>foo</strong></code> <code><strong>bar.baz\[123\].bam\[len\(x\) \- 1\]</strong></code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    md_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    rst: |-
      \ :ansopt:`foo.bar.baz.bam#boo:foo`\  \ :ansopt:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo.bar.baz.bam#boo:foo=`\  \ :ansopt:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo.bar.baz.bam#boo:foo=bar`\  \ :ansopt:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`bam.baz.foo#lookup:foo=bar`\  \ :ansopt:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansopt:`foo`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansopt:`foo=`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansopt:`foo=bar`\  \ :ansopt:`bar.baz[123].bam[len(x) - 1]=bar`\ 
    parse_opts:
      current_plugin:
        fqcn: foo.bar.baz.bam
        type: boo
  return_value_no_current_plugin:
    source:
      - |-
        RV(foo) RV(bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(foo=) RV(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(foo=bar) RV(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(bam.baz.foo#lookup:foo) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(bam.baz.foo#lookup:foo=) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(bam.baz.foo#lookup:foo=bar) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(ignore:foo) RV(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(ignore:foo=) RV(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(ignore:foo=bar) RV(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_plain: |-
      <p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    rst: |-
      \ :ansretval:`foo`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo=`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo=bar`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=bar`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`foo`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo=`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo=bar`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=bar`\ 
  return_value_current_plugin:
    source:
      - |-
        RV(foo) RV(bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(foo=) RV(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(foo=bar) RV(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(bam.baz.foo#lookup:foo) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(bam.baz.foo#lookup:foo=) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(bam.baz.foo#lookup:foo=bar) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(ignore:foo) RV(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(ignore:foo=) RV(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(ignore:foo=bar) RV(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_plain: |-
      <p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    rst: |-
      \ :ansretval:`foo.bar.baz.bam#boo:foo`\  \ :ansretval:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo.bar.baz.bam#boo:foo=`\  \ :ansretval:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo.bar.baz.bam#boo:foo=bar`\  \ :ansretval:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=bar`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`foo`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo=`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo=bar`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=bar`\ 
    parse_opts:
      current_plugin:
        fqcn: foo.bar.baz.bam
        type: boo
  return_value_no_current_plugin_w_links:
    source:
      - |-
        RV(foo) RV(bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(foo=) RV(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(foo=bar) RV(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(bam.baz.foo#lookup:foo) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(bam.baz.foo#lookup:foo=) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(bam.baz.foo#lookup:foo=bar) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(ignore:foo) RV(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(ignore:foo=) RV(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(ignore:foo=bar) RV(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo"><span class="std std-ref"><span class="pre">foo</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo"><span class="std std-ref"><span class="pre">foo=</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo"><span class="std std-ref"><span class="pre">foo=bar</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=bar</span></span></a></code></p><p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    html_plain: |-
      <p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo">foo</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo">foo=</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo">foo=bar</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=bar</a></code></p><p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-foo">foo</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-foo">foo\=</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-foo">foo\=bar</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</a></code>

      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    md_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    rst: |-
      \ :ansretval:`foo`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo=`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo=bar`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=bar`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`foo`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo=`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo=bar`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=bar`\ 
  return_value_current_plugin_w_links:
    source:
      - |-
        RV(foo) RV(bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(foo=) RV(bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(foo=bar) RV(bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(bam.baz.foo#lookup:foo) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(bam.baz.foo#lookup:foo=) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(bam.baz.foo#lookup:foo=bar) RV(bam.baz.foo#lookup:bar.baz[123].bam[len(x\) - 1]=bar)
      - |-
        RV(ignore:foo) RV(ignore:bar.baz[123].bam[len(x\) - 1])
      - |-
        RV(ignore:foo=) RV(ignore:bar.baz[123].bam[len(x\) - 1]=)
      - |-
        RV(ignore:foo=bar) RV(ignore:bar.baz[123].bam[len(x\) - 1]=bar)
    html: |-
      <p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-foo"><span class="std std-ref"><span class="pre">foo</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-foo"><span class="std std-ref"><span class="pre">foo=</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-foo"><span class="std std-ref"><span class="pre">foo=bar</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=bar</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo"><span class="std std-ref"><span class="pre">foo</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo"><span class="std std-ref"><span class="pre">foo=</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=</span></span></a></code></p><p><code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo"><span class="std std-ref"><span class="pre">foo=bar</span></span></a></code> <code class="ansible-return-value literal notranslate"><a class="reference internal" href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam"><span class="std std-ref"><span class="pre">bar.baz[123].bam[len(x) - 1]=bar</span></span></a></code></p><p><code class="ansible-return-value literal notranslate">foo</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]</code></p><p><code class="ansible-return-value literal notranslate">foo=</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=</code></p><p><code class="ansible-return-value literal notranslate">foo=bar</code> <code class="ansible-return-value literal notranslate">bar.baz[123].bam[len(x) - 1]=bar</code></p>
    html_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    html_plain: |-
      <p><code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-foo">foo</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-foo">foo=</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-foo">foo=bar</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam_boo.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=bar</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo">foo</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo">foo=</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=</a></code></p><p><code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-foo">foo=bar</a></code> <code><a href="https://docs.ansible.com/ansible/devel/collections/bam/baz/foo_lookup.html#retval-bar/baz/bam">bar.baz[123].bam[len(x) - 1]=bar</a></code></p><p><code>foo</code> <code>bar.baz[123].bam[len(x) - 1]</code></p><p><code>foo=</code> <code>bar.baz[123].bam[len(x) - 1]=</code></p><p><code>foo=bar</code> <code>bar.baz[123].bam[len(x) - 1]=bar</code></p>
    md: |-
      <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#retval\-foo">foo</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#retval\-foo">foo\=</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#retval\-foo">foo\=bar</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/foo/bar/baz/bam\_boo.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-foo">foo</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-foo">foo\=</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=</a></code>

      <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-foo">foo\=bar</a></code> <code><a href="https\://docs.ansible.com/ansible/devel/collections/bam/baz/foo\_lookup.html\#retval\-bar/baz/bam">bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</a></code>

      <code>foo</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]</code>

      <code>foo\=</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=</code>

      <code>foo\=bar</code> <code>bar.baz\[123\].bam\[len\(x\) \- 1\]\=bar</code>
    md_opts:
      pluginOptionLikeLink.js: |-
        (plugin, what, name, current_plugin) => `https://docs.ansible.com/ansible/devel/collections/${plugin.fqcn.replace(/\./g, '/')}_${plugin.type}.html#${what}-${name.join('/')}`
      pluginOptionLikeLink.py: |-
        lambda plugin, what, name, current_plugin: f"https://docs.ansible.com/ansible/devel/collections/{plugin.fqcn.replace('.', '/')}_{plugin.type}.html#{what}-{'/'.join(name)}"
    rst: |-
      \ :ansretval:`foo.bar.baz.bam#boo:foo`\  \ :ansretval:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo.bar.baz.bam#boo:foo=`\  \ :ansretval:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo.bar.baz.bam#boo:foo=bar`\  \ :ansretval:`foo.bar.baz.bam#boo:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`bam.baz.foo#lookup:foo=bar`\  \ :ansretval:`bam.baz.foo#lookup:bar.baz[123].bam[len(x) - 1]=bar`\ 

      \ :ansretval:`foo`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]`\ 

      \ :ansretval:`foo=`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=`\ 

      \ :ansretval:`foo=bar`\  \ :ansretval:`bar.baz[123].bam[len(x) - 1]=bar`\ 
    parse_opts:
      current_plugin:
        fqcn: foo.bar.baz.bam
        type: boo
  errors:
    source:
      - P(foo)
      - C(foo
      - R(foo,bar
    html: |-
      <p><span class="error">ERROR while parsing: While parsing P() at index 1 of paragraph 1: Parameter "foo" is not of the form FQCN#type</span></p><p><span class="error">ERROR while parsing: While parsing C() at index 1 of paragraph 2: Cannot find closing ")" after last parameter</span></p><p><span class="error">ERROR while parsing: While parsing R() at index 1 of paragraph 3: Cannot find closing ")" after last parameter</span></p>
    html_plain: |-
      <p><span class="error">ERROR while parsing: While parsing P() at index 1 of paragraph 1: Parameter "foo" is not of the form FQCN#type</span></p><p><span class="error">ERROR while parsing: While parsing C() at index 1 of paragraph 2: Cannot find closing ")" after last parameter</span></p><p><span class="error">ERROR while parsing: While parsing R() at index 1 of paragraph 3: Cannot find closing ")" after last parameter</span></p>
    md: |-
      <b>ERROR while parsing</b>: While parsing P\(\) at index 1 of paragraph 1\: Parameter \"foo\" is not of the form FQCN\#type

      <b>ERROR while parsing</b>: While parsing C\(\) at index 1 of paragraph 2\: Cannot find closing \"\)\" after last parameter

      <b>ERROR while parsing</b>: While parsing R\(\) at index 1 of paragraph 3\: Cannot find closing \"\)\" after last parameter
    rst: |-
      \ :strong:`ERROR while parsing`\ : While parsing P() at index 1 of paragraph 1: Parameter "foo" is not of the form FQCN#type\ 

      \ :strong:`ERROR while parsing`\ : While parsing C() at index 1 of paragraph 2: Cannot find closing ")" after last parameter\ 

      \ :strong:`ERROR while parsing`\ : While parsing R() at index 1 of paragraph 3: Cannot find closing ")" after last parameter\ 
