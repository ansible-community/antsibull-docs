---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# This workflow will run antsibull-docs tests

name: antsibull-docs tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Run once per week (Monday at 04:00 UTC)
  schedule:
    - cron: '0 4 * * 1'

jobs:
  build-simple-docsite:
    name: 'Build simple docsite (extra options: ${{ matrix.options }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        options:
          - '--use-current --sphinx-theme sphinx_rtd_theme'
          - '--no-indexes --squash-hierarchy --intersphinx ansible7:https://docs.ansible.com/ansible/6/ community.crypto --collection-version 2.0.0'
        python:
          - '3.11'
        antsibull_core_ref:
          - main
        include:
          - options: '--use-current --use-html-blobs --no-breadcrumbs community.crypto community.docker'
            python: '3.9'
            antsibull_core_ref: stable-1

    steps:
      - name: Check out antsibull-docs
        uses: actions/checkout@v3
        with:
          path: antsibull-docs

      - name: Check out dependent project antsibull-core
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull-core
          path: antsibull-core
          ref: ${{ matrix.antsibull_core_ref }}

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          sed -i -e 's/^python = .*/python = "^${{ matrix.python }}"/' pyproject.toml
          poetry install
          poetry update
        working-directory: antsibull-docs

      - name: Use antsibull-docs sphinx-init
        run: |
          poetry run coverage run -p --source antsibull_docs -m antsibull_docs.cli.antsibull_docs sphinx-init --lenient --dest-dir . ${{ matrix.options }}
        working-directory: antsibull-docs

      - name: Patch build.sh to supply code coverage
        run: |
          sed -i build.sh -e 's!antsibull-docs !poetry run coverage run -p --source antsibull_docs -m antsibull_docs.cli.antsibull_docs !g'
          sed -i build.sh -e 's!sphinx-build !poetry run coverage run -p --source antsibull_docs --source sphinx_antsibull_ext -m sphinx.cmd.build !g'
        working-directory: antsibull-docs

      - name: Install dependencies
        run: |
          poetry run pip install ansible-core
          poetry run pip install -r requirements.txt
        working-directory: antsibull-docs

      - name: Install collections
        # We install some collections using ansible-galaxy and at least one by cloning its repository,
        # so we have galaxy.yml instead of MANIFEST.json present.
        run: |
          ansible-galaxy collection install community.docker sensu.sensu_go
          git clone https://github.com/ansible-collections/community.crypto.git ~/.ansible/collections/ansible_collections/community/crypto
        if: contains(matrix.options, '--use-current')

      - name: Lint collection docs
        run: |
          poetry run coverage run -p --source antsibull_docs --source sphinx_antsibull_ext -m antsibull_docs.cli.antsibull_docs lint-collection-docs ~/.ansible/collections/ansible_collections/community/docker --plugin-docs
          poetry run coverage run -p --source antsibull_docs --source sphinx_antsibull_ext -m antsibull_docs.cli.antsibull_docs lint-collection-docs ~/.ansible/collections/ansible_collections/community/crypto
          poetry run coverage run -p --source antsibull_docs --source sphinx_antsibull_ext -m antsibull_docs.cli.antsibull_docs lint-collection-docs ~/.ansible/collections/ansible_collections/sensu/sensu_go
        working-directory: antsibull-docs
        if: contains(matrix.options, '--use-current')

      - name: Build docsite
        run: |
          ./build.sh
        working-directory: antsibull-docs

      - name: Validate HTML
        run:
          python .github/workflows/validate-html.py build/html/
        working-directory: antsibull-docs

      - name: Test plugin rendering
        run:
          poetry run coverage run -p --source antsibull_docs -m antsibull_docs.cli.antsibull_docs plugin --plugin-type module --dest-dir . community.crypto.acme_account_info
        working-directory: antsibull-docs
        if: contains(matrix.options, '--use-current')

      - name: Combine and upload coverage stats
        run: |
          poetry run coverage combine .coverage.*
          poetry run coverage report
          poetry run coverage xml -i
          poetry run codecov
        working-directory: antsibull-docs

  build-stable:
    name: 'Build stable docsite'
    runs-on: ubuntu-latest

    steps:
      - name: Check out antsibull-docs
        uses: actions/checkout@v3
        with:
          path: antsibull-docs

      - name: Check out dependent project antsibull-core
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull-core
          path: antsibull-core

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          sed -i -e 's/^python = .*/python = "^3.11"/' pyproject.toml
          poetry install
          poetry update
        working-directory: antsibull-docs

      - name: Get hold of deps file
        run: |
          curl https://raw.githubusercontent.com/ansible-community/ansible-build-data/main/7/ansible-7.0.0.deps --output ansible.deps
        working-directory: antsibull-docs

      - name: Build stable docs RST files
        run: |
          mkdir stable-docs
          poetry run coverage run -p --source antsibull_docs -m antsibull_docs.cli.antsibull_docs stable --deps-file ansible.deps --dest-dir stable-docs --no-breadcrumbs --no-indexes
        working-directory: antsibull-docs

      - name: Combine and upload coverage stats
        run: |
          poetry run coverage combine .coverage.*
          poetry run coverage report
          poetry run coverage xml -i
          poetry run codecov
        working-directory: antsibull-docs

  build-devel:
    name: 'Build devel docsite'
    runs-on: ubuntu-latest

    steps:
      - name: Check out antsibull-docs
        uses: actions/checkout@v3
        with:
          path: antsibull-docs

      - name: Check out dependent project antsibull-core
        uses: actions/checkout@v3
        with:
          repository: ansible-community/antsibull-core
          path: antsibull-core

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          sed -i -e 's/^python = .*/python = "^3.11"/' pyproject.toml
          poetry install
          poetry update
        working-directory: antsibull-docs

      - name: Get hold of ansible.in file
        run: |
          curl https://raw.githubusercontent.com/ansible-community/ansible-build-data/main/8/ansible.in --output ansible.in
        working-directory: antsibull-docs

      - name: Build devel docs RST files
        run: |
          mkdir devel-docs
          poetry run coverage run -p --source antsibull_docs -m antsibull_docs.cli.antsibull_docs devel --pieces-file ansible.in --dest-dir devel-docs
        working-directory: antsibull-docs

      - name: Combine and upload coverage stats
        run: |
          poetry run coverage combine .coverage.*
          poetry run coverage report
          poetry run coverage xml -i
          poetry run codecov
        working-directory: antsibull-docs
